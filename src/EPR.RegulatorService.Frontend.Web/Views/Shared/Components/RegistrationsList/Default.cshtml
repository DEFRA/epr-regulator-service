@using EPR.RegulatorService.Frontend.Web.Configs
@using EPR.RegulatorService.Frontend.Web.ViewModels.Registrations;
@using System.Text.Json
@using EPR.RegulatorService.Frontend.Core.Extensions

@inject Microsoft.FeatureManagement.IFeatureManager FeatureManager;
@model RegistrationsListViewModel

@await Html.PartialAsync("Partials/_RegulatorRegistrationFilters", Model.RegulatorRegistrationFiltersModel)

@if (Model.PagedOrganisationRegistrations.Any())
{
    <table class="govuk-table responsive-table" aria-label="Organisation Submission Listing">
        <thead role="rowgroup" class="govuk-table__head">
            <tr role="row" class="govuk-table__row">
                @if (await FeatureManager.IsEnabledAsync(FeatureFlags.PomDataPeriodAndTime))
                {
                    <th role="columnheader" scope="col" class="govuk-table__header epr-width-twenty-two-percent">@Localizer["Table.Header.Organisation"]</th>
                    <th role="columnheader" scope="col" class="govuk-table__header epr-width-twenty-two-percent">@Localizer["Table.Header.OrganisationId"]</th>
                    <th role="columnheader" scope="col" class="govuk-table__header epr-width-twenty-two-percent">@Localizer["Table.Header.SubmissionDateAndTime"]</th>
                    <th role="columnheader" scope="col" class="govuk-table__header epr-width-twenty-two-percent">@Localizer["Table.Header.SubmissionPeriod"]</th>
                }
                else
                {
                    <th role="columnheader" scope="col" class="govuk-table__header epr-width-twenty-eight-percent">@Localizer["Table.Header.Organisation"]</th>
                    <th role="columnheader" scope="col" class="govuk-table__header epr-width-twenty-eight-percent">@Localizer["Table.Header.OrganisationId"]</th>
                    <th role="columnheader" scope="col" class="govuk-table__header epr-width-twenty-eight-percent">@Localizer["Table.Header.SubmissionDate"]</th>
                }
                <th role="columnheader" scope="col" class="govuk-table__header epr-width-sixteen-percent">@Localizer["Table.Header.Status"]</th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">

            @foreach (var registration in Model.PagedOrganisationRegistrations)
            {
                <tr role="row" class="govuk-table__row">
                    <td role="gridcell" class="govuk-table__cell vertical-middle-align">
                        <span class="responsive-table__heading" aria-hidden="true">@Localizer["Table.Header.Organisation"]</span>

                        @using (Html.BeginForm("Registrations", "Registrations", new { jsonRegistration = JsonSerializer.Serialize(registration) }, FormMethod.Post))
                        {

                            <button class="govuk-link link-button-active" type="submit">
                                @registration.OrganisationName
                            </button>
                            <br />
                            @registration.OrganisationType.GetDescription()
                        }

                    </td>
                    <td role="gridcell" class="govuk-table__cell vertical-middle-align">
                        <span class="responsive-table__heading" aria-hidden="true">@Localizer["Table.Header.OrganisationId"]</span>
                        <p class="govuk-body">
                            @registration.OrganisationReference
                        </p>
                    </td>
                    <td role="gridcell" class="govuk-table__cell vertical-middle-align">
                        <span class="responsive-table__heading" aria-hidden="true">@Localizer["Table.Header.SubmissionDate"]</span>
                        <p class="govuk-body">
                            @if (await FeatureManager.IsEnabledAsync(FeatureFlags.RegistrationDataPeriodAndTime))
                            {
                                @registration.RegistrationDate.ToString("d MMMM yyyy HH:mm:ss")
                            }
                            else
                            {
                                @registration.RegistrationDate.ToString("d MMMM yyyy")
                            }
                        </p>
                    </td>
                    @if (await FeatureManager.IsEnabledAsync(FeatureFlags.RegistrationDataPeriodAndTime))
                    {
                        <td role="gridcell" class="govuk-table__cell vertical-middle-align">
                            <span class="responsive-table__heading" aria-hidden="true">@Localizer["Table.Header.SubmissionPeriod"]</span>
                            <p class="govuk-body">
                                @registration.SubmissionPeriod
                            </p>
                        </td>
                    }
                    <td role="gridcell" class="govuk-table__cell vertical-middle-align">
                        <span class="responsive-table__heading" aria-hidden="true">@Localizer["Table.Header.Status"]</span>
                        <p class="govuk-body">
                            @if (registration.Decision.Equals("Pending", StringComparison.OrdinalIgnoreCase))
                            {
                                <strong class="govuk-tag govuk-tag--blue">@registration.Decision</strong>
                            }
                            else if (registration.Decision.Equals("Accepted", StringComparison.OrdinalIgnoreCase))
                            {
                                <strong class="govuk-tag govuk-tag--green">@registration.Decision</strong>
                            }
                            else
                            {
                                <strong class="govuk-tag govuk-tag--red">@registration.Decision</strong>
                            }
                        </p>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @await Html.PartialAsync("Partials/_PaginationNavigation", Model.PaginationNavigationModel)
} else
{
    <p class="govuk-body govuk-!-text-align-centre govuk-!-static-margin-9">@Localizer["Body.NoResultsFound"]</p>
}
