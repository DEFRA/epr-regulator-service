@using EPR.RegulatorService.Frontend.Core.Enums.ReprocessorExporter
@using EPR.RegulatorService.Frontend.Web.Extensions
@using EPR.RegulatorService.Frontend.Web.ViewModels.ReprocessorExporter.Registrations

@model ManageRegistrationsViewModel

@foreach (var registrationMaterial in Model.Materials)
{
  <h2 class="govuk-heading-m">
    Review @registrationMaterial.MaterialName.ToLower() registration
	@if (registrationMaterial.Status == null)
    {
      if (registrationMaterial.DeterminationDate == null)
      {
		<p class="govuk-body"><strong>Determination date:</strong> Not set yet</p>
      }
      else
      {
		<p class="govuk-body"><strong>Determination date:</strong> @registrationMaterial.DeterminationDate.ToDisplayDate() <a href="change-determination-date" class="govuk-link">Change</a></p>
      }
    }
    else
    {
		<p class="govuk-body">
        <strong>Outcome:</strong> @registrationMaterial.StatusText on @registrationMaterial.StatusUpdatedAt.ToDisplayDateAndTime() by @registrationMaterial.StatusUpdatedByName
		@if (registrationMaterial.RegistrationNumber != null)
        {
          <br>
          <span><strong>Registration number:</strong> @registrationMaterial.RegistrationNumber</span>
        }
      </p>
    }
  </h2>

  <ul class="app-task-list__items govuk-!-padding-left-0" style="margin-bottom: 30px;">

    @if (Model.ApplicationOrganisationType == ApplicationOrganisationType.Reprocessor)
    {
      if (registrationMaterial.MaterialWasteLicensesTask != null)
      {
        <li class="app-task-list__item">
          <span class="app-task-list__task-name">
            <a href="@Url.ActionLink("MaterialWasteLicences", "Registrations", new { registrationTaskId = @registrationMaterial.MaterialWasteLicensesTask.Id })" aria-describedby="#" class="govuk-link govuk-link--no-visited-state"> Waste licences, permits or exemptions</a>
          </span>
          <strong class="govuk-tag @registrationMaterial.MaterialWasteLicensesTask.StatusCssClass app-task-list__tag" id="contact-information-status">@registrationMaterial.MaterialWasteLicensesTask.StatusText</strong><br>
        </li>
      }

	  if (registrationMaterial.InputsAndOutputsTask != null)
      {
        <li class="app-task-list__item">
          <span class="app-task-list__task-name">
            <a href="@Url.ActionLink("InputsAndOutputs", "Registrations", new { registrationTaskId = @registrationMaterial.InputsAndOutputsTask.Id })" aria-describedby="#" class="govuk-link govuk-link--no-visited-state"> Reprocessing inputs and outputs</a>
          </span>
          <strong class="govuk-tag @registrationMaterial.InputsAndOutputsTask.StatusCssClass app-task-list__tag" id="contact-information-status">@registrationMaterial.InputsAndOutputsTask.StatusText</strong><br>
        </li>
      }
    }

    @if (Model.ApplicationOrganisationType == ApplicationOrganisationType.Exporter)
    {
	  @if (registrationMaterial.MaterialDetailsTask != null)
      {
        <li class="app-task-list__item">
          <span class="app-task-list__task-name">
            <a href="@Url.ActionLink("MaterialDetails", "Registrations", new { registrationTaskId = @registrationMaterial.MaterialDetailsTask.Id })" aria-describedby="#" class="govuk-link govuk-link--no-visited-state"> Material details and contact</a>

          </span>
          <strong class="govuk-tag @registrationMaterial.MaterialDetailsTask.StatusCssClass app-task-list__tag" id="contact-information-status">@registrationMaterial.MaterialDetailsTask.StatusText</strong><br>
        </li>
      }

	  @if (registrationMaterial.OverseasReprocessorTask != null)
      {
        <li class="app-task-list__item">
          <span class="app-task-list__task-name">
            <a href="@Url.ActionLink("OverseasReprocessorInterim", "Registrations", new { registrationTaskId = @registrationMaterial.OverseasReprocessorTask.Id })" aria-describedby="#" class="govuk-link govuk-link--no-visited-state"> Overseas reprocessor and interim site details</a>
          </span>
          <strong class="govuk-tag @registrationMaterial.OverseasReprocessorTask.StatusCssClass app-task-list__tag" id="contact-information-status">@registrationMaterial.OverseasReprocessorTask.StatusText</strong><br>
        </li>
      }
    }

	@if (registrationMaterial.SamplingAndInspectionPlanTask != null)
    {
      <li class="app-task-list__item">
        <span class="app-task-list__task-name">
          <a href="@Url.ActionLink("SamplingInspection", "Registrations", new { registrationTaskId = @registrationMaterial.SamplingAndInspectionPlanTask.Id })" aria-describedby="#" class="govuk-link govuk-link--no-visited-state">Sampling and inspection plan</a>
        </span>
        <strong class="govuk-tag @registrationMaterial.SamplingAndInspectionPlanTask.StatusCssClass app-task-list__tag" id="contact-information-status">@registrationMaterial.SamplingAndInspectionPlanTask.StatusText</strong><br>
      </li>
    }

    <li class="app-task-list__item">
      <span class="app-task-list__task-name">
        <a href="@Url.ActionLink("Index", "ApplicationUpdate", new { registrationMaterialId = registrationMaterial.Id })" aria-describedby="#" class="govuk-link govuk-link--no-visited-state"> Update registration outcome</a>
      </span>
      <strong class="govuk-tag @registrationMaterial.StatusCssClass app-task-list__tag" id="contact-information-status">@registrationMaterial.StatusText</strong><br>
    </li>
  </ul>
}
