trigger: none
pr: none
pool: DEFRA-COMMON-ubuntu2004-SSV3

parameters:
- name: teamName
  displayName: 'Select a dev environment to deploy to:    (works only with "development" as target env)'
  default: 'DEV1'
  type: string
  values:
    - DEV1
    - DEV2
    - DEV3
    - DEV5
    - DEV6
    - DEV7
    - DEV8
    - DEV9
    - DEV10
    - DEV11
    - DEV12
    - DEV13
    - DEV14
- name: envToDeploy
  displayName: 'Target Environment to deploy:    (select "development" for dev 1-9)'
  default: development
  type: string
  values:
    - development
    - tst
    - preprod
    - prod
- name: imageTag
  displayName: Enter Tag for the Image (Docker tag) or Release name (Git repo tag)
  default: ''
  type: string

##deployment variable for each environment that requires application to be deployed into.
## In order to deploy to each environment two yaml files are required 1.front-end 2. Facade each are named teamname-environment-deployment ie "team-3-development-facade.yaml"
##this is picked up by the above inputs and fed into the below parameters, in order to add a new team in you will need to add a new team you will need to add the two above files to vars folder
##and update the parameters below.

variables:
  - ${{ if eq(parameters.envToDeploy, 'development') }}:
    - name: env
      value: DEV1
    - template: vars/${{ parameters.teamName }}-${{ parameters.envToDeploy }}.yaml
  - ${{ elseif eq(parameters.envToDeploy, 'tst') }}:
    - name: env
      value: TST1
    - template: vars/${{ parameters.envToDeploy }}.yaml
  - ${{ elseif eq(parameters.envToDeploy, 'preprod') }}:
    - name: env
      value: PRE1
    - template: vars/${{ parameters.envToDeploy }}.yaml
  - ${{ elseif eq(parameters.envToDeploy, 'prod') }}:
    - name: env
      value: PRD1
    - template: vars/${{ parameters.envToDeploy }}.yaml
# Release tags reference
  - template: pipelines/image-tags/${{ parameters.envToDeploy }}.yaml@ReleaseTags
  - ${{ if eq(parameters.envToDeploy, 'development') }}:
    - template: pipelines/image-tags/${{ parameters.teamName }}-${{ parameters.envToDeploy }}.yaml@ReleaseTags

resources:
  repositories:
    - repository: CommonTemplates
      name: defra/epr-webapps-code-deploy-templates
      type: github
      endpoint: defra
      ref: main

    # The repo will be reference the repo by a release tag (if the imageTag parameter contains 'release') otherwise it will pull down the main branch.
    - repository: ReleaseTags
      name: RWD-CPR-EPR4P-ADO/epr-app-config-settings
      type: git
      ref: ${{ replace(replace(contains(parameters.imageTag, 'RELEASE'),'True',replace('refs/tags/RELEASETAG','RELEASETAG', parameters.imageTag)),'False','main') }}

extends:
  template: epr-deployment-pipeline.yaml@CommonTemplates
  parameters:
    ${{ if contains(parameters.imageTag, 'RELEASE') }}:
      imageTag: $(DEVRWDWEBWAx411)
    ${{ else }}:
      imageTag: ${{ parameters.imageTag }}
    azureSubscription: $(azureSubscription)
    acrName: $(acr.azureContainerRegistryName)
    registryName: $(acr.repositoryName)
    serviceName: $(serviceName)
    ${{ if or( eq(parameters.envToDeploy, 'development'), eq(parameters.envToDeploy, 'qa-dev4') )}}:
      targetEnvironment: 'development'
    ${{ else }}:
      targetEnvironment: '$(env)'

